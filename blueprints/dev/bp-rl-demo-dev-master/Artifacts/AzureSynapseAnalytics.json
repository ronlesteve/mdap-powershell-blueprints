{
  "kind": "template",
  "properties": {
    "displayName": "Azure Synapse Analytics-dev",
    "description": "",
    "dependsOn": [],
    "template": {
      "$schema": "http://schema.management.azure.com/schemas/2014-04-01-preview/deploymentTemplate.json#",
      "contentVersion": "1.0.0.0",
      "parameters": {
        "administratorLogin": {
          "type": "string"
        },
        "administratorLoginPassword": {
          "type": "securestring"
        },
        "databaseName": {
          "type": "string"
        },
        "skuName": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "serverName": {
          "type": "string"
        },
        "version": {
          "type": "string"
        },
        "collation": {
          "type": "string"
        },
        "databaseTags": {
          "type": "object",
          "defaultValue": {}
        },
        "serverTags": {
          "type": "object",
          "defaultValue": {}
        },
        "enableADS": {
          "type": "bool",
          "defaultValue": false
        },
        "enableVA": {
          "type": "bool",
          "defaultValue": false
        },
        "allowAzureIps": {
          "type": "bool",
          "defaultValue": true
        },
        "allowClientIp": {
          "type": "bool",
          "defaultValue": false
        },
        "clientIpRuleName": {
          "type": "string",
          "defaultValue": ""
        },
        "clientIpValue": {
          "type": "string",
          "defaultValue": ""
        },
        "enablePrivateEndpoint": {
          "type": "bool",
          "defaultValue": false
        },
        "privateEndpointNestedTemplateId": {
          "type": "string",
          "defaultValue": ""
        },
        "privateEndpointSubscriptionId": {
          "type": "string",
          "defaultValue": ""
        },
        "privateEndpointResourceGroup": {
          "type": "string",
          "defaultValue": ""
        },
        "privateEndpointName": {
          "type": "string",
          "defaultValue": ""
        },
        "privateEndpointLocation": {
          "type": "string",
          "defaultValue": ""
        },
        "privateLinkServiceName": {
          "type": "string",
          "defaultValue": ""
        },
        "privateLinkServiceServiceId": {
          "type": "string",
          "defaultValue": ""
        },
        "privateEndpointVnetSubscriptionId": {
          "type": "string",
          "defaultValue": ""
        },
        "privateEndpointVnetResourceGroup": {
          "type": "string",
          "defaultValue": ""
        },
        "privateEndpointVnetName": {
          "type": "string",
          "defaultValue": ""
        },
        "privateEndpointSubnetName": {
          "type": "string",
          "defaultValue": ""
        },
        "enablePrivateDnsZone": {
          "type": "bool",
          "defaultValue": false
        },
        "privateEndpointDnsRecordUniqueId": {
          "type": "string",
          "defaultValue": ""
        },
        "privateEndpointTemplateLink": {
          "type": "string",
          "defaultValue": ""
        },
        "privateDnsForPrivateEndpointTemplateLink": {
          "type": "string",
          "defaultValue": ""
        },
        "privateDnsForPrivateEndpointNicTemplateLink": {
          "type": "string",
          "defaultValue": ""
        },
        "privateDnsForPrivateEndpointIpConfigTemplateLink": {
          "type": "string",
          "defaultValue": ""
        }
      },
      "resources": [
        {
          "condition": "[parameters('enableVA')]",
          "apiVersion": "2019-04-01",
          "type": "Microsoft.Storage/storageAccounts",
          "name": "[variables('storageName')]",
          "location": "[parameters('location')]",
          "sku": {
            "name": "Standard_LRS"
          },
          "kind": "StorageV2",
          "properties": {}
        },
        {
          "apiVersion": "2014-04-01-preview",
          "type": "Microsoft.Sql/servers",
          "location": "[parameters('location')]",
          "tags": "[parameters('serverTags')]",
          "name": "[parameters('serverName')]",
          "properties": {
            "administratorLogin": "[parameters('administratorLogin')]",
            "administratorLoginPassword": "[parameters('administratorLoginPassword')]",
            "version": "[parameters('version')]"
          },
          "resources": [
            {
              "name": "[parameters('databaseName')]",
              "type": "databases",
              "apiVersion": "2017-10-01-preview",
              "location": "[parameters('location')]",
              "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
              ],
              "tags": "[parameters('databaseTags')]",
              "sku": {
                "name": "[parameters('skuName')]",
                "tier": "DataWarehouse"
              },
              "properties": {
                "collation": "[parameters('collation')]"
              }
            },
            {
              "condition": "[parameters('allowAzureIps')]",
              "apiVersion": "2014-04-01-preview",
              "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
              ],
              "location": "[parameters('location')]",
              "name": "AllowAllWindowsAzureIps",
              "properties": {
                "endIpAddress": "0.0.0.0",
                "startIpAddress": "0.0.0.0"
              },
              "type": "firewallrules"
            },
            {
              "condition": "[parameters('allowClientIp')]",
              "apiVersion": "2014-04-01-preview",
              "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('serverName'))]"
              ],
              "location": "[parameters('location')]",
              "name": "[parameters('clientIpRuleName')]",
              "properties": {
                "endIpAddress": "[parameters('clientIpValue')]",
                "startIpAddress": "[parameters('clientIpValue')]"
              },
              "type": "firewallrules"
            },
            {
              "condition": "[parameters('enableADS')]",
              "apiVersion": "2017-03-01-preview",
              "type": "securityAlertPolicies",
              "name": "Default",
              "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/databases/', parameters('databaseName'))]"
              ],
              "properties": {
                "state": "Enabled",
                "disabledAlerts": [],
                "emailAddresses": [],
                "emailAccountAdmins": true
              }
            },
            {
              "condition": "[parameters('enableVA')]",
              "apiVersion": "2018-06-01-preview",
              "type": "vulnerabilityAssessments",
              "name": "Default",
              "properties": {
                "storageContainerPath": "[if(parameters('enableVA'), concat(reference(variables('storageName'), '2018-02-01').primaryEndpoints.blob, 'vulnerability-assessment'), '')]",
                "storageAccountAccessKey": "[if(parameters('enableVA'), listKeys(variables('storageName'), '2018-02-01').keys[0].value, '')]",
                "recurringScans": {
                  "isEnabled": true,
                  "emailSubscriptionAdmins": true,
                  "emails": []
                }
              },
              "dependsOn": [
                "[concat('Microsoft.Sql/servers/', parameters('serverName'))]",
                "[concat('Microsoft.Storage/storageAccounts/', variables('storageName'))]",
                "[concat('Microsoft.Sql/servers/', parameters('serverName'), '/securityAlertPolicies/Default')]"
              ]
            }
          ]
        },
        {
          "condition": "[parameters('enablePrivateEndpoint')]",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "[variables('deploymentTemplateApi')]",
          "name": "[variables('subnetPoliciesTemplateName')]",
          "properties": {
            "mode": "Incremental",
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "resources": [
                {
                  "apiVersion": "[variables('privateEndpointApi')]",
                  "name": "[concat(parameters('privateEndpointVnetName'), '/', parameters('privateEndpointSubnetName'))]",
                  "location": "[parameters('privateEndpointLocation')]",
                  "properties": {
                    "privateEndpointNetworkPolicies": "Disabled"
                  },
                  "type": "Microsoft.Network/virtualNetworks/subnets"
                }
              ]
            }
          },
          "subscriptionId": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetSubscriptionId'), variables('subscriptionId'))]",
          "resourceGroup": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetResourceGroup'), variables('resourceGroupName'))]"
        },
        {
          "condition": "[parameters('enablePrivateEndpoint')]",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "[variables('deploymentTemplateApi')]",
          "name": "[variables('privateEndpointTemplateName')]",
          "dependsOn": [
            "[resourceId(variables('subscriptionId'), variables('resourceGroupName'), 'Microsoft.Sql/servers/databases/', parameters('serverName'), parameters('databaseName'))]",
            "[variables('subnetPoliciesTemplateName')]"
          ],
          "properties": {
            "mode": "Incremental",
            "parameters": {
              "privateEndpointName": {
                "value": "[parameters('privateEndpointName')]"
              },
              "privateEndpointConnectionId": {
                "value": ""
              },
              "privateEndpointConnectionName": {
                "value": "[parameters('privateLinkServiceName')]"
              },
              "privateEndpointId": {
                "value": "[variables('privateEndpointId')]"
              },
              "privateEndpointApiVersion": {
                "value": "[variables('privateEndpointApi')]"
              },
              "privateLinkServiceId": {
                "value": "[parameters('privateLinkServiceServiceId')]"
              },
              "groupId": {
                "value": "SqlServer"
              },
              "subnetId": {
                "value": "[variables('privateEndpointSubnetResourceId')]"
              },
              "location": {
                "value": "[parameters('privateEndpointLocation')]"
              },
              "tags": {
                "value": {}
              }
            },
            "templatelink": {
              "contentVersion": "1.0.0.0",
              "uri": "[parameters('privateEndpointTemplateLink')]"
            }
          },
          "subscriptionId": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointSubscriptionId'), variables('subscriptionId'))]",
          "resourceGroup": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointResourceGroup'), variables('resourceGroupName'))]"
        },
        {
          "condition": "[and(parameters('enablePrivateEndpoint'), parameters('enablePrivateDnsZone'))]",
          "type": "Microsoft.Resources/deployments",
          "apiVersion": "[variables('deploymentTemplateApi')]",
          "name": "[concat('PrivateDns-', parameters('privateEndpointNestedTemplateId'))]",
          "dependsOn": [
            "[variables('privateEndpointTemplateName')]"
          ],
          "properties": {
            "mode": "Incremental",
            "template": {
              "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
              "contentVersion": "1.0.0.0",
              "resources": [
                {
                  "type": "Microsoft.Network/privateDnsZones",
                  "apiVersion": "2018-09-01",
                  "name": "[string('privatelink.database.windows.net')]",
                  "location": "global",
                  "tags": {},
                  "properties": {}
                },
                {
                  "type": "Microsoft.Network/privateDnsZones/virtualNetworkLinks",
                  "apiVersion": "2018-09-01",
                  "name": "[concat(string('privatelink.database.windows.net'), '/', uniqueString(variables('privateEndpointVnetId')))]",
                  "location": "global",
                  "dependsOn": [
                    "[string('privatelink.database.windows.net')]"
                  ],
                  "properties": {
                    "virtualNetwork": {
                      "id": "[variables('privateEndpointVnetId')]"
                    },
                    "registrationEnabled": false
                  }
                },
                {
                  "apiVersion": "[variables('deploymentTemplateApi')]",
                  "name": "[concat('EndpointDnsRecords-', parameters('privateEndpointDnsRecordUniqueId'))]",
                  "type": "Microsoft.Resources/deployments",
                  "dependsOn": [
                    "[string('privatelink.database.windows.net')]"
                  ],
                  "properties": {
                    "mode": "Incremental",
                    "templatelink": {
                      "contentVersion": "1.0.0.0",
                      "uri": "[parameters('privateDnsForPrivateEndpointTemplateLink')]"
                    },
                    "parameters": {
                      "privateDnsName": {
                        "value": "[string('privatelink.database.windows.net')]"
                      },
                      "privateEndpointNicResourceId": {
                        "value": "[if(parameters('enablePrivateEndpoint'), reference(concat('Microsoft.Resources/deployments/', variables('privateEndpointTemplateName'))).outputs.networkInterfaceId.value, '')]"
                      },
                      "nicRecordsTemplateUri": {
                        "value": "[parameters('privateDnsForPrivateEndpointNicTemplateLink')]"
                      },
                      "ipConfigRecordsTemplateUri": {
                        "value": "[parameters('privateDnsForPrivateEndpointIpConfigTemplateLink')]"
                      },
                      "uniqueId": {
                        "value": "[parameters('privateEndpointDnsRecordUniqueId')]"
                      },
                      "existingRecords": {
                        "value": {}
                      }
                    }
                  }
                }
              ]
            }
          },
          "subscriptionId": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetSubscriptionId'), variables('subscriptionId'))]",
          "resourceGroup": "[if(parameters('enablePrivateEndpoint'), parameters('privateEndpointVnetResourceGroup'), variables('resourceGroupName'))]"
        }
      ],
      "variables": {
        "subscriptionId": "[subscription().subscriptionId]",
        "resourceGroupName": "[resourceGroup().name]",
        "uniqueStorage": "[uniqueString(variables('subscriptionId'), variables('resourceGroupName'), parameters('location'))]",
        "storageName": "[tolower(concat('sqlva', variables('uniqueStorage')))]",
        "subnetPoliciesTemplateName": "[concat('SubnetPolicies-', if(parameters('enablePrivateEndpoint'), parameters('privateEndpointNestedTemplateId'), ''))]",
        "privateEndpointTemplateName": "[concat('PrivateEndpoint-', if(parameters('enablePrivateEndpoint'), parameters('privateEndpointNestedTemplateId'), ''))]",
        "deploymentTemplateApi": "2018-05-01",
        "privateEndpointApi": "2019-04-01",
        "privateEndpointId": "[if(parameters('enablePrivateEndpoint'), resourceId(parameters('privateEndpointSubscriptionId'), parameters('privateEndpointResourceGroup'), 'Microsoft.Network/privateEndpoints', parameters('privateEndpointName')), '')]",
        "privateEndpointVnetId": "[if(parameters('enablePrivateEndpoint'), resourceId(parameters('privateEndpointVnetSubscriptionId'), parameters('privateEndpointVnetResourceGroup'), 'Microsoft.Network/virtualNetworks', parameters('privateEndpointVnetName')), '')]",
        "privateEndpointSubnetResourceId": "[if(parameters('enablePrivateEndpoint'), resourceId(parameters('privateEndpointVnetSubscriptionId'), parameters('privateEndpointVnetResourceGroup'), 'Microsoft.Network/virtualNetworks/subnets', parameters('privateEndpointVnetName'), parameters('privateEndpointSubnetName')), '')]"
      }
    },
    "resourceGroup": "ResourceGroup",
    "parameters": {
      "databaseName": {
        "value": "rl-synapse-demo001-dev"
      },
      "skuName": {
        "value": "DW100c"
      },
      "serverName": {
        "value": "rl-sqlserver-demo001-dev"
      },
      "collation": {
        "value": "SQL_Latin1_General_CP1_CI_AS"
      },
      "databaseTags": {
        "value": {}
      },
      "enableADS": {
        "value": false
      },
      "enableVA": {
        "value": false
      },
      "enablePrivateEndpoint": {
        "value": false
      },
      "privateEndpointNestedTemplateId": {
        "value": "pe-1a77e3ae-8ae3-4ccf-82cf-0da49be7f00b"
      },
      "privateEndpointSubscriptionId": {
        "value": "[parameters('azureSynapseAnalytics-dev_privateEndpointSubscriptionId')]"
      },
      "privateEndpointResourceGroup": {
        "value": "[parameters('azureSynapseAnalytics-dev_privateEndpointResourceGroup')]"
      },
      "privateEndpointName": {
        "value": "[parameters('azureSynapseAnalytics-dev_privateEndpointName')]"
      },
      "privateEndpointLocation": {
        "value": "[parameters('azureSynapseAnalytics-dev_privateEndpointLocation')]"
      },
      "privateLinkServiceName": {
        "value": "[parameters('azureSynapseAnalytics-dev_privateLinkServiceName')]"
      },
      "privateLinkServiceServiceId": {
        "value": "[parameters('azureSynapseAnalytics-dev_privateLinkServiceServiceId')]"
      },
      "privateEndpointVnetSubscriptionId": {
        "value": "[parameters('azureSynapseAnalytics-dev_privateEndpointVnetSubscriptionId')]"
      },
      "privateEndpointVnetResourceGroup": {
        "value": "[parameters('azureSynapseAnalytics-dev_privateEndpointVnetResourceGroup')]"
      },
      "privateEndpointVnetName": {
        "value": "[parameters('azureSynapseAnalytics-dev_privateEndpointVnetName')]"
      },
      "privateEndpointSubnetName": {
        "value": "[parameters('azureSynapseAnalytics-dev_privateEndpointSubnetName')]"
      },
      "enablePrivateDnsZone": {
        "value": false
      },
      "privateEndpointDnsRecordUniqueId": {
        "value": "[parameters('azureSynapseAnalytics-dev_privateEndpointDnsRecordUniqueId')]"
      },
      "privateEndpointTemplateLink": {
        "value": "https://sqlazureextension.hosting.portal.azure.net/sqlazureextension/Content/2.1.0130857/DeploymentTemplates/PrivateEndpoint.json"
      },
      "privateDnsForPrivateEndpointTemplateLink": {
        "value": "https://sqlazureextension.hosting.portal.azure.net/sqlazureextension/Content/2.1.0130857/DeploymentTemplates/PrivateDnsForPrivateEndpoint.json"
      },
      "privateDnsForPrivateEndpointNicTemplateLink": {
        "value": "https://sqlazureextension.hosting.portal.azure.net/sqlazureextension/Content/2.1.0130857/DeploymentTemplates/PrivateDnsForPrivateEndpointNic.json"
      },
      "privateDnsForPrivateEndpointIpConfigTemplateLink": {
        "value": "https://sqlazureextension.hosting.portal.azure.net/sqlazureextension/Content/2.1.0130857/DeploymentTemplates/PrivateDnsForPrivateEndpointIpConfig.json"
      },
      "administratorLogin": {
        "value": "rladmin"
      },
      "administratorLoginPassword": {
        "value": "[parameters('azureSynapseAnalytics-dev_administratorLoginPassword')]"
      },
      "location": {
        "value": "centralus"
      },
      "version": {
        "value": "12.0"
      },
      "serverTags": {
        "value": "[parameters('azureSynapseAnalytics-dev_serverTags')]"
      },
      "allowAzureIps": {
        "value": true
      },
      "allowClientIp": {
        "value": false
      },
      "clientIpRuleName": {
        "value": "ClientIp-2020-8-3_21-42-7"
      },
      "clientIpValue": {
        "value": "108.160.193.57"
      }
    }
  }
}